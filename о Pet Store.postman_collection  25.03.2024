{
	"info": {
		"_postman_id": "52bc576d-047f-4a07-826b-55a9e5a01f5b",
		"name": "Pet Store",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28629359"
	},
	"item": [
		{
			"name": "pet",
			"item": [
				{
					"name": "Add a new pet to the store",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(\"Pre-request script request\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"pet_id\", pm.response.json().id)\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Chek that id in response equeal pet_id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"pet_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Chek that id equel 4444\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.category.id).to.eql(4444);\r",
									"});\r",
									"\r",
									"pm.test(\"Chek category name equel dogs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.category.name).to.eql(\"dogs\");\r",
									"});\r",
									"\r",
									"pm.test(\"Chek pet name equel Jack\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Jack\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{$randomInt}},\r\n  \"category\": {\r\n    \"id\": 4444,\r\n    \"name\": \"dogs\"\r\n  },\r\n  \"name\": \"Jack\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{store_url}}/pet",
							"host": [
								"{{store_url}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "UploadImage an image",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(\"Pre-request script request\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Chek that message contains avatar\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"avatar\");\r",
									"});\r",
									"\r",
									"pm.test(\"Chek that message contains logo.jpeg\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"logo.jpeg\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "additionalMetadata",
									"value": "avatar",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "logo.jpeg"
								}
							]
						},
						"url": {
							"raw": "{{per_store}}/pet/:petid/uploadImage",
							"host": [
								"{{per_store}}"
							],
							"path": [
								"pet",
								":petid",
								"uploadImage"
							],
							"variable": [
								{
									"key": "petid",
									"value": "{{pet_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an existing pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(\"Pre-request script request\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Chek that id in response equeal pet_id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"pet_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Chek that id equel 4444\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.category.id).to.eql(6);\r",
									"});\r",
									"\r",
									"pm.test(\"Chek category name equel dogs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.category.name).to.eql(\"Superdogs\");\r",
									"});\r",
									"\r",
									"pm.test(\"Chek pet name equel Jack\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Barsik\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{pet_id}},\r\n  \"category\": {\r\n    \"id\": 6,\r\n    \"name\": \"Superdogs\"\r\n  },\r\n  \"name\": \"Barsik\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 6,\r\n      \"name\": \"superdog\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{per_store}}/pet",
							"host": [
								"{{per_store}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find pet by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(\"Pre-request script request\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Chek that id in response equeal pet_id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"pet_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Chek that id equel 4444\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.category.id).to.eql(6);\r",
									"});\r",
									"\r",
									"pm.test(\"Chek category name equel dogs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.category.name).to.eql(\"Superdogs\");\r",
									"});\r",
									"\r",
									"pm.test(\"Chek pet name equel Jack\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Barsik\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{per_store}}/pet/:pet_id",
							"host": [
								"{{per_store}}"
							],
							"path": [
								"pet",
								":pet_id"
							],
							"variable": [
								{
									"key": "pet_id",
									"value": "{{pet_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Pets by status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(\"Pre-request script request\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Tests request\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{per_store}}/pet/findByStatus?status=sold",
							"host": [
								"{{per_store}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "sold"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Updates a pet in the store with form data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(\"Pre-request script request\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Tests request\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Sharik",
									"type": "text"
								},
								{
									"key": "status",
									"value": "sold",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{per_store}}/pet/444555",
							"host": [
								"{{per_store}}"
							],
							"path": [
								"pet",
								"444555"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletes a pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(\"Pre-request script request\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Tests request\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{per_store}}/pet/444555",
							"host": [
								"{{per_store}}"
							],
							"path": [
								"pet",
								"444555"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"console.log(\"Pre-request script folder\")"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"console.log(\"Tests folder\")"
						]
					}
				}
			]
		},
		{
			"name": "store",
			"item": []
		},
		{
			"name": "user",
			"item": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log(\"Pre-request script collection\")"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log(\"Tests collection\")"
				]
			}
		}
	],
	"variable": [
		{
			"key": "per_store",
			"value": "https://petstore.swagger.io/v2",
			"type": "string"
		},
		{
			"key": "pet_id",
			"value": ""
		}
	]
}